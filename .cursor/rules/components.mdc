---
description: 
globs: src/components/**
alwaysApply: false
---
# Directory Structure
src/components/
├── component-name/
│   ├── index.ts(x)          # Re-export file
│   └── component-name.tsx   # Main component file
└── index.ts                 # Global component exports

# Component File Structure (component-name.tsx)
## 1. Imports (in this order and only if relevant):
import * as React from 'react';
import cn from 'classnames';
// Other specific imports...
## 2. TypeScript Interface:
export interface ComponentNameProps
  extends React.HTMLAttributes<HTMLDivElement>, // or appropriate HTML element
    VariantProps<typeof componentVariants> {
  // Additional custom props here
}
## 3. Component Implementation:
export const ComponentName = ({ className, variant, size }: ComponentNameProps) => {
    return (
      <div
        className={className}
        ref={ref}
        {...props}
      >
        {/* Component content */}
      </div>
    );
};

# Index File (index.ts)
export * from './component-name';

# Global Export (src/components/index.ts)
Add your component to the main index:
export * from './component-name';

# Key Patterns to Follow:
Use Theme Variables - Leverage CSS custom properties from @theme in globals.css
Glass Morphism Support - Include glass effect variants using theme shadow/backdrop variables
Accessibility - Include proper ARIA attributes and focus states
Consistent Naming - Use PascalCase for components, camelCase for variants
Class Merging - Always use classNames() utility for className composition